# IF THE MICRO-SERVICE DOES NOT NEED ANY TEST-ONLY END-POINTS (ALWAYS PREFERRED) DELETE THIS FILE.

# !!!WARNING!!! This file MUST NOT be referenced in the "application.conf" file to avoid risk of rolling test routes in the production environment.
# If you need test routes when running tests in CI make sure that the profile for this micro-service (used by service-manager) defines this router as parameter.
# To do so add the following line to the micro-service profile: "-Dapplication.router=testOnlyDoNotUseInAppConf.Routes"
# To start the micro-service locally using the test routes run the following command: "sbt run -Dapplication.router=testOnlyDoNotUseInAppConf.Routes"

# Any test-only end-point should be defined here.
# !!!WARNING!!! Every route defined in this file MUST be prefixed with "/test-only/".
# Failing to follow this rule may result in test routes deployed in production.

# Add all the application routes to the prod.routes file
->          /                                            prod.Routes

DELETE      /test-only/reset-test-data                   uk.gov.hmrc.overseaspensiontransferbackend.controllers.testOnly.TestOnlyController.resetDatabase

# Seed a single in-progress transfer
POST        /test-only/in-progress/seed                  uk.gov.hmrc.overseaspensiontransferbackend.controllers.testOnly.TestOnlyInProgressController.seed

# Bulk seed (JSON array)
POST        /test-only/in-progress/bulk                  uk.gov.hmrc.overseaspensiontransferbackend.controllers.testOnly.TestOnlyInProgressController.bulk

# Generate N fake records for a PSTR
POST        /test-only/in-progress/generate/:pstr/:n     uk.gov.hmrc.overseaspensiontransferbackend.controllers.testOnly.TestOnlyInProgressController.generate(pstr: String, n: Int)

# Clear by PSTR (or all if no PSTR supplied)
DELETE      /test-only/in-progress/clear/:pstr           uk.gov.hmrc.overseaspensiontransferbackend.controllers.testOnly.TestOnlyInProgressController.clear(pstr: String)